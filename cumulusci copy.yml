project:
  #------------------------------------#
  # QBRIX CONFIG                       #
  #------------------------------------#
  # Q Brix Name, API Version and Repo URL are all set here. Name and Package > Name should be the same.

  name: rlm-base
  package:
    name: rlm-base
    api_version: "60.0"
  git:
    default_branch: "main"
    repo_url: https://github.com/bgaldino/rlm-base
  source_format: sfdx

  #------------------------------------#
  # QBRIX CUSTOM OPTIONS & SETTINGS    #
  #------------------------------------#

  custom:
    # ADD YOUR DETAILS HERE FOR Q BRIX REGISTRATION
    # It is recommended you run "Setup New Q Brix Project" from the VSCode Build Tasks to set these as it will also update other files
    # Guidance: https://confluence.internal.salesforce.com/display/QNEXTGENDEMOS/Setup+Qbrix+Task
    qbrix_owner_name: "Ejaz Urval"
    qbrix_owner_team: "Demo Platform"
    qbrix_publisher_name: "Ejaz Urval"
    qbrix_publisher_team: "Demo Platform"
    qbrix_documentation_url: https://confluence.internal.salesforce.com/pages/viewpage.action?pageId=487362018
    qbrix_description: "SHORT DESCRIPTION OF QBRIX HERE"

    # Github Additional Information
    qbrix_repo_id: 0

    # GLOBAL EXCLUSION LIST
    # Used by retrieve_changes and list_changes builtin CCI tasks
    exclude: &exclude-list
      - FeatureParameter
      - "AuraDefinition:"
      - "SiteDotCom:"
      - "ManagedTopics:"
      - "LiveChatTranscript:"
      - "ExperienceResource:"
      - "AppMenu:"
      - "Profile:"
      - "FlowDefinition:"

  #------------------------------------#
  # QBRIX PACKAGE DEPENDENCIES         #
  #------------------------------------#
  # ADD MANAGED & UNMANAGED PACKAGE DEPENDENCIES HERE. OTHER CCI PROJECTS CAN ALSO BE LINKED PROVIDING THEY WORK WITH JUST A DEPLOY METHOD.
  # Guidance: https://confluence.internal.salesforce.com/display/QNEXTGENDEMOS/Package+Install

  dependencies:

#--Add Project Sources here--
sources:
  #------------------------------------#
  # QBRIX SOURCES                      #
  #------------------------------------#
  # Add Q Brix Sources here. These must be located on GitHub and be a CCI Project or Q Brix Project.
  # Guidance: https://confluence.internal.salesforce.com/display/QNEXTGENDEMOS/QBrix+Dependencies

  base:
    github: https://github.com/sfdc-qbranch/QBrix-0-xDO-BaseConfig
tasks:
  #------------------------------------#
  # CCI TASK DEFAULTS                  #
  #------------------------------------#
  # Default configuration and overrides for builtin CCI Tasks

  run_tests:
    options:
      required_org_code_coverage_percent: 75

  load_dataset:
    options:
      ignore_row_errors: True
      drop_missing_schema: True
      set_recently_viewed: True

  deploy:
    options:
      path: force-app

  list_changes:
    options:
      exclude: *exclude-list

  retrieve_changes:
    options:
      exclude: *exclude-list

  #------------------------------------#
  # Q BRIX TASKS                       #
  #------------------------------------#
  # CUSTOM TASKS ADDED FOR Q BRIX DEVELOPMENT

  qbrix_robot_test:
    class_path: qx.qrobot.qx_robot_launch_sandbox.QRobotTestCapture

  qbrix_trapdoor_add:
    class_path: qx.platform.cumulusci.tasks.qx_cci_orgconfig_hydrate.NGTrapDoorInjector

  precommit_check:
    class_path: qx.platform.cumulusci.tasks.qx_cci_pre_commit.PreCommit

  qbrix_landing:
    class_path: qx.platform.cumulusci.tasks.qx_cci_landing.RunLanding

  qbrix_preflight:
    class_path: qx.platform.cumulusci.tasks.qx_cci_preflight.RunPreflight

  health_check:
    class_path: qx.platform.cumulusci.tasks.qx_cci_health_checker.HealthChecker

  update_qbrix:
    class_path: qx.platform.cumulusci.tasks.qx_cci_brix_update.BrixUpdater

  setup_qbrix:
    class_path: qx.platform.cumulusci.tasks.qx_cci_initial_setup.InitProject

  list_qbrix:
    class_path: qx.platform.salesforce_platform.qx_salesforce_utils.ListQBrix

  q_update_dependencies:
    class_path: qx.platform.salesforce_platform.qx_salesforce_utils.QUpdateDependencies

  mass_qbrix_update:
    class_path: qx.shared.utils.qx_cci_mass_ops.MassFileOps

  deploy_settings:
    description: Checks that Settings have been defined in force-app and deploys them if present
    class_path: cumulusci.tasks.salesforce.Deploy
    options:
      path: force-app/main/default/settings

  spin_request:
    description: generate a spin
    class_path: qx.platform.salesforce_platform.qx_salesforce_org_generator.Spin

  upsert_favorite:
    class_path: qx.platform.salesforce_platform.qx_salesforce_ui.UpsertFavorite

  analytics_manager:
    class_path: qx.platform.einstein.analytics.qx_analytics.AnalyticsManager

  analytics_timeshift:
    description: timeshifts the specified dataset and fields based on a date
    class_path: qx.platform.einstein.analytics.qx_analytics.TimeShift

  user_manager:
    class_path: qx.platform.salesforce_platform.qx_salesforce_utils.CreateUser

  omniscript_align:
    class_path: qx.platform.omnistudio.qx_omniscript_chiro.OmniscriptAlign

  validate_qbrix:
    description: Validates the qbrix
    class_path: cumulusci.tasks.robotframework.Robot
    options:
      suites: qbrix_local/robot/tests/validate.robot
      vars: browser:headlesschrome
      test: Validate Qbrix
      options:
        report: None
        log: None
        output: None

  qbrix_apex_run_and_wait_example:
    class_path: qx.platform.salesforce_platform.qx_batch_apex.RunAnonymousApexAndWait
    options:
      filepath: path to anonymous block to run
      exitonsoqlzero: "select count() soql to verify exit on 0 count"
      maxwaithchecks: 10

  experience_manager:
    class_path: qx.platform.digital_experience.qx_experience_manager.ExperienceManager

  experience_file_asset_manager:
    class_path: qx.platform.digital_experience.qx_experience_manager.ExperienceFileAssetManager

  qbrix_installer_tracking:
    class_path: qx.platform.cumulusci.tasks.qx_cci_tracking.InstallRecorder

  abort_install:
    description: Aborts the install due to the when condition being met.
    class_path: qx.platform.cumulusci.tasks.qx_cci_orgconfig_hydrate.NGAbort

  qbrix_shell_deploy_metadeploy:
    description: Runs the specified task or flow of the qbrix in a subprocess.
    class_path: qx.platform.cumulusci.tasks.qx_cci_legacy_deploy.Deploy
    options:
      message: Runs the specified task or flow of the qbrix in a subprocess.
      entrypoint: deploy_qbrix
      etnrypointtype: flow

  qbrix_cache_add:
    description: Run the datapack via apex in the new datamodel
    class_path: qx.platform.cumulusci.tasks.qx_cci_orgconfig_hydrate.NGCacheAdd

  qbrix_metadata_checker:
    description: Q Brix Metadata Scan for missing metadata tool
    class_path: qx.platform.cumulusci.tasks.qx_cci_metadata_checker.MetadataChecker

  orgconfig_hydrate:
    description: injects additional context into the orgconfig that can be referenced downstream
    class_path: qx.platform.cumulusci.tasks.qx_cci_orgconfig_hydrate.NGOrgConfig

  deploy_dx:
    class_path: cumulusci.tasks.sfdx.SFDXOrgTask
    options:
      command: project deploy start --source-dir force-app/main/default --ignore-conflicts

  dustpan:
    description: injects additional context into the orgconfig that can be referenced downstream
    class_path: qx.platform.cumulusci.tasks.qx_cci_orgconfig_hydrate.NGBroom

  flow_wrapper:
    description: Runs the specified task or flow of the qbrix in a subprocess in a single task. This allows us to use When against a flow.
    class_path: qx.platform.cumulusci.tasks.qx_cci_legacy_deploy.Deploy

  qbrix_sfdx:
    class_path: cumulusci.tasks.sfdx.SFDXOrgTask

  qbrix_upload_files:
    class_path: qx.platform.salesforce_platform.qx_salesforce_utils.UploadFiles

  qbrix_download_files:
    class_path: qx.platform.salesforce_platform.qx_salesforce_utils.DownloadFiles

  qbrix_glooop:
    class_path: qx.platform.cumulusci.tasks.qx_cci_glooop.Glooop

  qbrix_fart:
    class_path: qx.platform.cumulusci.tasks.qx_cci_fart.FART

  py_sfdmu_deploy:
    class_path: qx.data.qx_sfdmu.SFDMULoad
    options:
      pathtoexportjson: datasets/sfdmu

  #------------------------------------#
  # DATA TOOL INTEGRATION              #
  #------------------------------------#
  # Note: This section can be removed if you are not using the NextGen Data Tool
  # Guide: https://confluence.internal.salesforce.com/display/QNEXTGENDEMOS/NextGen+Data+Tool

  deploy_nextgen_data:
    class_path: qx.data.qx_nextgen_datatool.RunDataTool

  #------------------------------------#
  # CUSTOM TASKS                       #
  #------------------------------------#
  # Add Your Custom Tasks here
  deploy_permissions:
    description: Runs deployment against the permission set group file for Revenue Cloud.
    class_path: cumulusci.tasks.salesforce.Deploy
    options:
      path: force-app/main/default/permissionsetgroups
  
  deploy_decision_tables:
    description: Decision Tables are required to be deployed first before other metadata -- this prioritizes this deployment first
    class_path: cumulusci.tasks.salesforce.Deploy
    options:
      path: force-app/main/default/decisionTables

  enable_revenue_cloud:
    class_path: cumulusci.tasks.robotframework.Robot
    options:
      suites: qbrix_local/robot/RevenueCloud.robot
      vars: browser:headlesschrome
      test: EnableOrderSave
      options:
        report: None
        log: None
        output: None

  deploy_product_discovery_context:
    description: Decision Tables are required to be deployed first before other metadata -- this prioritizes this deployment first
    class_path: cumulusci.tasks.salesforce.Deploy
    options:
      path: force-app/main/default/contextDefinitions

flows:
  #------------------------------------#
  # STAGE 1 of 3: PRE-QBRIX DEPLOYMENT #
  #------------------------------------#
  # Define steps to prepare the org and deploy other dependencies in this section
  # NOTE: "prepare_org" and "source_dependencies" SHOULD ALWAYS BE DEFINED

  #sample_custom_flow:
  #  steps:
  #    1:
  #      task: orgconfig_hydrate
  #    2:
  #      task: qbrix_sfdx
  #      when: org_config.is_scratch_org()
  #      options:
  #        command: org display

  # Prepares the Org with any required settings/Robot scripts
  prepare_org:
    steps:
      1:
        # Deploys settings and configuration to prep the org and flows
        task: qbrix_preflight
      2:
        # Dependencies are set in the QBRIX PACKAGE DEPENDENCIES area above.
        task: update_dependencies
        ui_options:
          name: Installs/Updates Q Brix Dependencies
      3:
        task: enable_revenue_cloud
      4:
        task: deploy_settings
      5:
        task: deploy_permissions
      6:
        task: assign_permission_set_groups
        ignore_failure: True
        options:
          api_names:
            - RLM_Base
        ui_options:
          name: Assign Permission Set Group to Admin User
      7:
        task: deploy_decision_tables
      8:
        task: deploy_product_discovery_context

  # Add steps here to deploy q brix added to the sources area above
  source_dependencies:
    steps:
      1:
        # Placeholder task, replace this with your custom steps
        task: None

  #------------------------------------#
  # STAGE 2 of 3: Q BRIX DEPLOYMENT    #
  #------------------------------------#
  # DEFAULT INSTALL FLOWS ARE DEFINED HERE.
  # NOTE: "deploy_qbrix" and "deploy_qbrix_without_dependencies" SHOULD ALWAYS BE DEFINED

  # Deploys the q brix
  deploy_qbrix:
    steps:
      1:
        task: qbrix_installer_tracking
      2:
        flow: dependencies
      3:
        task: deploy
        ui_options:
          name: Deploying Q Brix Metadata
      4:
        flow: post_qbrix_deploy
      5:
        task: qbrix_installer_tracking
        options:
          explicitexit: True

  # Deploys the q brix into a TSO or Production Org
  deploy_qbrix_tso:
    steps:
      1:
        flow: deploy_qbrix

  # Deploys the Q Brix without source dependencies (Used for stacking)
  deploy_qbrix_without_dependencies:
    steps:
      1:
        task: qbrix_installer_tracking
      2:
        flow: prepare_org
      3:
        task: deploy
        ui_options:
          name: Deploying Q Brix Metadata
      4:
        flow: post_qbrix_deploy
      5:
        task: qbrix_installer_tracking
        options:
          explicitexit: True

  #-------------------------------------------------#
  # STAGE 3 of 3 (OPTIONAL) POST-QBRIX DEPLOYMENT   #
  #-------------------------------------------------#
  # ADD POST DEPLOYMENT STEPS HERE
  # NOTE: "post_qbrix_deploy" SHOULD ALWAYS BE DEFINED

  post_qbrix_deploy:
    steps:
      1:
        task: assign_permission_set_groups
        ignore_failure: True
        options:
          api_names:
            - SDO_Revenue_Cloud_Base
        ui_options:
          name: Assign Permission Set Group to Admin User

  #------------------------------------#
  # QBRIX TEST VALIDATION              #
  #------------------------------------#
  # Add steps here to validate your org deployment through testing
  # Guide Here: https://confluence.internal.salesforce.com/display/QNEXTGENDEMOS/Validation+Methods
  # NOTE: "validate_qbrix" SHOULD ALWAYS BE DEFINED

  validate_qbrix:
    steps:
      1:
        task: validate_qbrix

  #------------------------------------#
  # QBRIX DATA                         #
  #------------------------------------#
  # DEFINE DATA GENERATION FLOWS AND TASKS HERE
  # Guide: https://confluence.internal.salesforce.com/display/QNEXTGENDEMOS/Data
  # NOTE: "deploy_qbrix_data" SHOULD ALWAYS BE DEFINED

  deploy_qbrix_data:
    steps:
      1:
        # Placeholder task, replace this with your custom steps
        task: None

  #------------------------------------#
  # QBRIX LEGACY FLOWS AND DEFAULTS    #
  #------------------------------------#
  #
  # NOTE: These flows should not need to be modified and allow for legacy integration and default overrides.
  #

  # Deploys just the contents of this q brix with any essential dependencies
  deploy_qbrix_min:
    steps:
      1:
        flow: deploy_qbrix_without_dependencies

  # Legacy flow to redirect to the new flow for deploying data.
  generate_qbrix_data:
    steps:
      1:
        flow: deploy_qbrix_data

  # Default Override of cci task
  deploy_unmanaged_ee:
    steps:
      6:
        task: None

  # Default Override of cci task
  deploy_unmanaged:
    steps:
      4:
        task: None

  dev_org:
    steps:
      1:
        flow: deploy_qbrix
      2:
        task: None
      3:
        task: None
      4:
        task: snapshot_changes

  qa_org:
    steps:
      1:
        flow: deploy_qbrix
      2:
        task: None
      3:
        task: None
      4:
        task: snapshot_changes

  dependencies:
    steps:
      1:
        flow: prepare_org
      2:
        flow: source_dependencies

  config_dev:
    steps:
      1:
        task: None
      2:
        task: None
      3:
        flow: post_qbrix_deploy
      90:
        task: None

  config_qa:
    steps:
      1:
        task: None
      2:
        task: None
      3:
        flow: post_qbrix_deploy
      90:
        task: None

orgs:
  #------------------------------------#
  # SCRATCH ORG CONFIG                 #
  #------------------------------------#
  # DEFAULT SETTINGS FOR SCRATCH ORGS. PREVIEW ORGS ARE DESIGNED TO LOAD ON NA135 WHICH IS AN R0 INSTANCE
  # These should not need to be modified

  scratch:
    dev:
      config_file: orgs/dev.json
      days: 30
      namespaced: false
    dev_preview:
      config_file: orgs/dev_preview.json
      days: 30
      namespaced: false
    qa:
      config_file: orgs/dev.json
      days: 30
      namespaced: false
    qa_preview:
      config_file: orgs/dev_preview.json
      days: 30
      namespaced: false

plans:
  #------------------------------------#
  # METADEPLOY CONFIG                  #
  #------------------------------------#
  # DEFINE DEPLOY PLANS HERE FOR USE WITH METADEPLOY

  deploy_q_brix_plan:
    slug: deployqbrix
    title: Deploy Q Brix
    tier: primary
    is_listed: True
    steps:
      1:
        task: qbrix_shell_deploy_metadeploy
        ui_options:
          name: Deploy Q Brix
